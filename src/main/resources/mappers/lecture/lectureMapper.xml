<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.care.bedu.lecture.dao.LectureDAO">

	<select id="getLectureList" resultType="com.care.bedu.lecture.vo.LectureVO" parameterType="hashmap">
		SELECT 
			ROWNUM AS RNUM,
			A.LECT_NUM as lectNum, 
			A.TITLE, 
			A.TEACHER, 
			COUNT(B.LECT_NUM) AS TOTAL, 
			A.LECT_PERIOD as lectPeriod,
			A.THUMBNAIL, 
			A.LECT_CNT as lectCnt, 
			A.REG_DATE as regDate, 
			TO_CHAR(A.PRICE, '999,999,999') AS PRICE,
			A.LECT_DESC as lectDesc,
			TO_CHAR(TRUNC(SYSDATE)+ NUMTODSINTERVAL(SUM(B.LECT_DTL_TIME),'second'),'hh24:mi:ss' ) AS TOTALTIMES, 
			A.CATE_CODE, 
			A.CATE_KOR,
			A.LECT_SUMMARY AS lectSum
		FROM (
			SELECT 
				LECT_NUM,
				TITLE,
				TEACHER,
				LECT_DESC,
				THUMBNAIL,
				LECT_CNT,
				LECT_LIKE_CNT,
				LECT_PERIOD,
				PRICE,
				CATE_CODE,
				CATE_KOR,
				REG_DATE,
				REG_ID,
				LECT_SUMMARY
			FROM 
				t_bedu_lect WHERE CATE_CODE = #{category}) A
		LEFT JOIN t_bedu_lect_dtl B
		ON A.LECT_NUM = B.LECT_NUM
		GROUP BY 
			ROWNUM, A.LECT_NUM,A.TITLE,A.TEACHER,A.LECT_PERIOD,A.THUMBNAIL, A.LECT_CNT,A.REG_DATE,A.PRICE, A.LECT_DESC,A.CATE_CODE, A.CATE_KOR,A.LECT_SUMMARY
		ORDER BY RNUM
	</select>

	<select id="getLectureDetail" resultType="com.care.bedu.lecture.vo.LectureVO" parameterType="int">
		SELECT 
			ROWNUM AS RNUM,
			A.LECT_NUM as lectNum, 
			A.TITLE, 
			A.TEACHER, 
			B.TOTAL AS TOTAL, 
			A.LECT_PERIOD as lectPeriod,
			A.THUMBNAIL, 
			A.LECT_CNT as lectCnt, 
			A.REG_DATE as regDate, 
			TO_CHAR(A.PRICE, '999,999,999') AS PRICE, 
			A.LECT_DESC as lectDesc,
			ROUND(AVG(C.RW_GRADE)) AS SCORE, 
			COUNT(C.LECT_NUM) AS SCOREUSERS, 
			TO_CHAR(TRUNC(SYSDATE)+NUMTODSINTERVAL(B.TOTALTIMES,'second') ,'hh24:mi:ss' ) AS TOTALTIMES, 
			A.CATE_CODE, 
			A.CATE_KOR,
			A.LECT_SUMMARY AS lectSum
		FROM (
			SELECT 
				LECT_NUM,
				TITLE,
				TEACHER,
				LECT_DESC,
				THUMBNAIL,
				LECT_CNT,
				LECT_LIKE_CNT,
				LECT_PERIOD,
				PRICE,
				CATE_CODE,
				CATE_KOR,
				REG_DATE,
				REG_ID,
				LECT_SUMMARY
			FROM 
				t_bedu_lect WHERE LECT_NUM = #{LECT_NUM}) A 
		LEFT JOIN (
			SELECT 
				COUNT(LECT_NUM) AS TOTAL, 
				SUM(LECT_DTL_TIME) AS TOTALTIMES, 
				LECT_NUM as lectNum 
			FROM 
				t_bedu_lect_dtl WHERE LECT_NUM = #{LECT_NUM}
			GROUP BY LECT_NUM	
			) B
		ON A.LECT_NUM = B.lectNum 
		LEFT JOIN (
			SELECT 
				RW_GRADE,
				LECT_NUM
			FROM 
				t_bedu_rw_bd 
			WHERE LECT_NUM = #{LECT_NUM}) C
		ON A.LECT_NUM = C.LECT_NUM
		GROUP BY 
			ROWNUM, A.LECT_NUM,A.TITLE,A.TEACHER,A.LECT_PERIOD,A.THUMBNAIL, A.LECT_CNT,A.REG_DATE,A.PRICE, A.LECT_DESC,A.CATE_CODE, A.CATE_KOR,A.LECT_SUMMARY,
			B.TOTAL, B.TOTALTIMES
	</select>


	<select id="getLectureField" resultType="com.care.bedu.lecture.vo.LectureVO" parameterType="String">
		SELECT
			LEC.*
		FROM(
			SELECT
				ROWNUM AS RNUM,
				A.LECT_NUM as lectNum, 
				A.TITLE, 
				A.TEACHER,
				COUNT(DISTINCT B.LECT_NUM) AS TOTAL, 
				A.LECT_PERIOD as lectPeriod,
				A.THUMBNAIL, 
				A.LECT_CNT as lectCnt, 
				A.REG_DATE as regDate, 
				A.PRICE, 
				A.LECT_DESC as lectDesc,
				AVG(C.RW_GRADE) AS SCORE,
				A.CATE_CODE, 
				A.CATE_KOR
			FROM (
				SELECT
					LECT_NUM,
					TITLE,
					TEACHER,
					LECT_DESC,
					THUMBNAIL,
					LECT_CNT,
					LECT_LIKE_CNT,
					LECT_PERIOD,
					PRICE,
					CATE_CODE,
					CATE_KOR,
					REG_DATE,
					REG_ID,
					LECT_SUMMARY
				FROM
					T_BEDU_LECT
				WHERE CATE_CODE = #{category}
			) A
			LEFT OUTER JOIN T_BEDU_LECT_DTL B	ON A.LECT_NUM = B.LECT_NUM
			LEFT JOIN T_BEDU_RW_BD C ON A.LECT_NUM = C.LECT_NUM
			GROUP BY 
				ROWNUM, A.LECT_NUM,A.TITLE,A.TEACHER,A.LECT_PERIOD,A.THUMBNAIL, A.LECT_CNT,A.REG_DATE,A.PRICE, A.LECT_DESC,A.CATE_CODE, A.CATE_KOR
			) LEC
		WHERE #{begin} <= RNUM AND RNUM <= (#{begin}+5)
	</select>

	<select id="getVideoList" resultType="com.care.bedu.lecture.vo.LectureDetailVO">
		SELECT 
			LECT_DTL_NUM as lectDtlNum,
			LECT_NUM as lectNum, 
			LECT_DTL_TITLE as lectDtlTitle, 
			TO_CHAR(TRUNC(SYSDATE)+NUMTODSINTERVAL(LECT_DTL_TIME, 'second')  ,'hh24:mi:ss') AS TIMES
		FROM 
			t_bedu_lect_dtl 
		WHERE LECT_NUM = #{LECT_NUM}
	</select>

	<select id="lectureSearch" resultType="com.care.bedu.lecture.vo.LectureVO"
	parameterType="hashmap">
		SELECT  *
		FROM
			(	
				SELECT 
					ROWNUM AS RNUM,
					A.LECT_NUM as lectNum, 
					A.TITLE, 
					A.TEACHER, 
					COUNT(B.LECT_NUM) AS TOTAL, 
					A.LECT_PERIOD as lectPeriod,
					A.THUMBNAIL, 
					A.LECT_CNT as lectCnt, 
					A.REG_DATE as regDate, 
					A.PRICE, 
					A.LECT_DESC as lectDesc,
					A.CATE_CODE, 
					A.CATE_KOR
				FROM 
					(SELECT 
						LECT_NUM,
						TITLE,
						TEACHER,
						LECT_DESC,
						THUMBNAIL,
						LECT_CNT,
						LECT_LIKE_CNT,
						LECT_PERIOD,
						PRICE,
						CATE_CODE,
						CATE_KOR,
						REG_DATE,
						REG_ID,
						LECT_SUMMARY
					FROM 
						t_bedu_lect
					WHERE 
						TITLE LIKE '%'||#{keyword}||'%'
					) A 
				LEFT JOIN T_BEDU_LECT_DTL B
				ON A.LECT_NUM = B.LECT_NUM
				GROUP BY ROWNUM, A.LECT_NUM,A.TITLE,A.TEACHER,A.LECT_PERIOD,A.THUMBNAIL, A.LECT_CNT,A.REG_DATE,A.PRICE, A.LECT_DESC,A.CATE_CODE, A.CATE_KOR
				ORDER BY A.REG_DATE DESC
			)
		WHERE #{begin} <= RNUM AND RNUM <= (#{begin}+5)
	</select>

	<select id="searchTotal" resultType="int">
		SELECT 
			COUNT(A.LECT_NUM)
		FROM 
			(SELECT 
				LECT_NUM,
				TITLE,
				TEACHER,
				LECT_DESC,
				THUMBNAIL,
				LECT_CNT,
				LECT_LIKE_CNT,
				LECT_PERIOD,
				PRICE,
				CATE_CODE,
				CATE_KOR,
				REG_DATE,
				REG_ID,
				LECT_SUMMARY
			FROM 
				t_bedu_lect 
			WHERE 
				TITLE LIKE '%'||#{keyword}||'%'
				) A 
	</select>

	<select id="getLikeList" resultType="int">
		SELECT LECT_NUM as lectNum
		FROM t_bedu_lectLIKE WHERE USERID = '123'
	</select>

	<select id="getNewestLecture" resultType="com.care.bedu.lecture.vo.LectureVO">
		SELECT * 
		FROM
			(SELECT 
				ROWNUM AS RNUM,
				A.LECT_NUM as lectNum, 
				A.TITLE, 
				A.TEACHER, 
				COUNT(B.LECT_NUM) AS TOTAL, 
				A.LECT_PERIOD as lectPeriod,
				A.THUMBNAIL, 
				A.LECT_CNT as lectCnt, 
				A.REG_DATE as regDate, 
				TO_CHAR(A.PRICE, '999,999,999') AS PRICE,
				A.LECT_DESC as lectDesc,
				A.CATE_CODE, 
				A.CATE_KOR,
				A.LECT_SUMMARY AS lectSum
			FROM (
				SELECT 
					LECT_NUM,
					TITLE,
					TEACHER,
					LECT_DESC,
					THUMBNAIL,
					LECT_CNT,
					LECT_LIKE_CNT,
					LECT_PERIOD,
					PRICE,
					CATE_CODE,
					CATE_KOR,
					REG_DATE,
					REG_ID,
					LECT_SUMMARY
				FROM 
					T_BEDU_LECT) A 
			LEFT JOIN T_BEDU_LECT_DTL B
			ON A.LECT_NUM = B.LECT_NUM
			GROUP BY ROWNUM, A.LECT_NUM,A.TITLE,A.TEACHER,A.LECT_PERIOD,A.THUMBNAIL, A.LECT_CNT,A.REG_DATE,A.PRICE, A.LECT_DESC,A.CATE_CODE, A.CATE_KOR,A.LECT_SUMMARY
			ORDER BY A.REG_DATE DESC
			)
		WHERE
			0 <= RNUM AND RNUM <= (0+5)
		
	</select>

	<select id="getReview" resultType="com.care.bedu.review.vo.ReviewVO">
	SELECT 
		*
	FROM(
		SELECT 
			ROWNUM AS RNUM,
			title, 
			USER_NAME as writer,	
			CONTENT as content,
			RW_GRADE as star,
			RW_DATE as reviewDate
		FROM 
			t_bedu_rw_bd WHERE LECT_NUM = #{num}
		ORDER BY RW_DATE
		)
	WHERE 0<= RNUM AND RNUM <=5
	</select>

	<insert id="addToCart" parameterType="hashmap">
		INSERT INTO 
			t_bedu_cart(
				CART_LECT_NUM, 
				cart_user_num
			)
		SELECT
			#{lectNum},
			#{userNum}
		FROM DUAL
		WHERE NOT EXISTS(
			SELECT 1 
			FROM 
				t_bedu_cart
			WHERE
				CART_LECT_NUM = #{lectNum} AND
				CART_USER_NUM = #{userNum}
		)
	</insert>

	<select id="getCart" resultType="com.care.bedu.lecture.vo.LectureVO">
		SELECT
			A.CART_LECT_NUM AS lectNum,
			B.TITLE,
			B.TEACHER,
			B.LECT_SUMMARY as lectSum,
			B.THUMBNAIL,
			TO_CHAR(B.PRICE, '999,999,999') AS PRICE
		FROM
			BEDU.T_BEDU_CART A
		LEFT JOIN t_bedu_lect B
		ON A.CART_LECT_NUM = B.LECT_NUM
		WHERE
			A.CART_USER_NUM = #{num}
	</select>

	<delete id="removeFromCart" parameterType="hashmap">
		DELETE FROM 
			t_bedu_cart 
		WHERE 
			CART_USER_NUM = #{userNum} AND
			CART_LECT_NUM = #{lectNum}
	</delete>
</mapper>
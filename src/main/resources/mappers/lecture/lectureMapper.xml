<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.care.bedu.lecture.dao.LectureDao">

<select id="getLectureList" resultType="com.care.bedu.lecture.dto.LectureDto" parameterType="hashmap">
	SELECT A.NUM, A.TITLE, A.TEACHER, COUNT(B.POSTID) AS TOTAL, A.DURATION,
	A.THUMBNAIL, A.VIEW, A.REGIDATE, A.PRICE, A.DESCRIPTION,
	SEC_TO_TIME(SUM(B.TIMES)) AS TOTALTIMES, A.CATEGORY, A.KORCATEGORY
	 FROM (SELECT * FROM BIL.LECTURE WHERE CATEGORY = #{category})  AS A 
	LEFT JOIN BIL.LECTUREDETAIL B
	ON A.NUM = B.POSTID
	GROUP BY A.NUM
	LIMIT #{begin}, 20
	;
</select>

<select id="getLectureDetail" resultType="com.care.bedu.lecture.dto.LectureDto" parameterType="int">
	SELECT A.NUM, A.TITLE, A.TEACHER, B.TOTAL AS TOTAL, A.DURATION,
	A.THUMBNAIL, A.VIEW, A.REGIDATE, FORMAT(A.PRICE, 0) AS PRICE, A.DESCRIPTION,
	ROUND(AVG(C.SCORE)) AS SCORE, COUNT(C.USERID) AS SCOREUSERS, 
	SEC_TO_TIME(B.TOTALTIMES) AS TOTALTIMES, A.CATEGORY, A.KORCATEGORY
	 FROM (SELECT * FROM BIL.LECTURE WHERE NUM = #{num})  AS A 
	LEFT JOIN (SELECT COUNT(NUM) AS TOTAL, SUM(TIMES) AS TOTALTIMES, POSTID FROM BIL.LECTUREDETAIL WHERE POSTID = #{num}) B
	ON A.NUM = B.POSTID 
	LEFT JOIN (SELECT * FROM BIL.LECTURESCORE WHERE LECTUREID = #{num}) C
	ON A.NUM = C.LECTUREID
	GROUP BY A.NUM;
</select>


<select id="getLectureField" resultType="com.care.bedu.lecture.dto.LectureDto" parameterType="String">
	SELECT A.NUM, A.TITLE, A.TEACHER, COUNT(DISTINCT B.NUM) AS TOTAL, A.DURATION,
	A.THUMBNAIL, A.VIEW, A.REGIDATE, A.PRICE, A.DESCRIPTION,
	AVG(C.SCORE) AS SCORE,
	SEC_TO_TIME(SUM(B.TIMES)) AS TOTALTIMES, A.CATEGORY, A.KORCATEGORY
	 FROM (SELECT * FROM BIL.LECTURE WHERE CATEGORY = #{category})  AS A 
	LEFT JOIN BIL.LECTUREDETAIL B
	ON A.NUM = B.POSTID 
	LEFT JOIN BIL.LECTURESCORE C
	ON A.NUM = C.LECTUREID
	GROUP BY A.NUM
    ORDER BY C.SCORE DESC LIMIT 0, 4
    ;
</select>

<select id="getVideoList" resultType="com.care.bedu.lecture.dto.LectureDetailDto">
	SELECT NUM, POSTID, TITLE, SEC_TO_TIME(TIMES) AS TIMES FROM BIL.LECTUREDETAIL WHERE POSTID = #{num};
</select>

<select id="lectureSearch" resultType="com.care.bedu.lecture.dto.LectureDto"
parameterType="hashmap">
	SELECT A.NUM, A.TITLE, A.TEACHER, COUNT(B.POSTID) AS TOTAL, A.DURATION,
	A.THUMBNAIL, A.VIEW, A.REGIDATE, A.PRICE, A.DESCRIPTION,
	SEC_TO_TIME(SUM(B.TIMES)) AS TOTALTIMES, A.CATEGORY, A.KORCATEGORY
	 FROM (SELECT * FROM BIL.LECTURE WHERE TITLE LIKE CONCAT('%',#{keyword},'%'))  AS A 
	LEFT JOIN BIL.LECTUREDETAIL AS B
	ON A.NUM = B.POSTID
	GROUP BY A.NUM
	LIMIT #{begin}, 20
	;
</select>

<select id="searchTotal" resultType="int">
	SELECT COUNT(A.NUM)
	 FROM (SELECT * FROM BIL.LECTURE WHERE TITLE LIKE CONCAT('%',#{keyword},'%'))  AS A 
	LEFT JOIN BIL.LECTUREDETAIL AS B
	ON A.NUM = B.POSTID
	;
</select>

<select id="getLikeList">
	SELECT POSTID, CASE WHEN USERID = #{userId} THEN 1 ELSE 0 END AS LIKEYN
	FROM BIL.LECTURELIKE;
</select>



</mapper>